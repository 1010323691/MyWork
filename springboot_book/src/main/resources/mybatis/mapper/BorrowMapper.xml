<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.book.springboot.mapper.BorrowMapper">
  <resultMap id="BaseResultMap" type="com.book.springboot.entity.Borrow">
    <id column="br_id" jdbcType="INTEGER" property="brId" />
    <result column="br_outtime" jdbcType="TIMESTAMP" property="brOuttime" />
    <result column="br_endtime" jdbcType="TIMESTAMP" property="brEndtime" />
    <result column="br_backtime" jdbcType="TIMESTAMP" property="brBacktime" />
    <result column="br_ifreturn" jdbcType="INTEGER" property="brIfreturn" />
    <result column="br_record" jdbcType="VARCHAR" property="brRecord" />
    <result column="br_bookid" jdbcType="INTEGER" property="brBookid" />
    <result column="br_readerid" jdbcType="INTEGER" property="brReaderid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    br_id, br_outtime, br_endtime, br_backtime, br_ifreturn, br_record, br_bookid, br_readerid
  </sql>
  <select id="selectByExample" parameterType="com.book.springboot.entity.BorrowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from borrow
    where br_id = #{brId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from borrow
    where br_id = #{brId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.book.springboot.entity.BorrowExample">
    delete from borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.book.springboot.entity.Borrow">
    insert into borrow (br_id, br_outtime, br_endtime, 
      br_backtime, br_ifreturn, br_record, 
      br_bookid, br_readerid)
    values (#{brId,jdbcType=INTEGER}, #{brOuttime,jdbcType=TIMESTAMP}, #{brEndtime,jdbcType=TIMESTAMP}, 
      #{brBacktime,jdbcType=TIMESTAMP}, #{brIfreturn,jdbcType=INTEGER}, #{brRecord,jdbcType=VARCHAR}, 
      #{brBookid,jdbcType=INTEGER}, #{brReaderid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.book.springboot.entity.Borrow">
    insert into borrow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brId != null">
        br_id,
      </if>
      <if test="brOuttime != null">
        br_outtime,
      </if>
      <if test="brEndtime != null">
        br_endtime,
      </if>
      <if test="brBacktime != null">
        br_backtime,
      </if>
      <if test="brIfreturn != null">
        br_ifreturn,
      </if>
      <if test="brRecord != null">
        br_record,
      </if>
      <if test="brBookid != null">
        br_bookid,
      </if>
      <if test="brReaderid != null">
        br_readerid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brId != null">
        #{brId,jdbcType=INTEGER},
      </if>
      <if test="brOuttime != null">
        #{brOuttime,jdbcType=TIMESTAMP},
      </if>
      <if test="brEndtime != null">
        #{brEndtime,jdbcType=TIMESTAMP},
      </if>
      <if test="brBacktime != null">
        #{brBacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="brIfreturn != null">
        #{brIfreturn,jdbcType=INTEGER},
      </if>
      <if test="brRecord != null">
        #{brRecord,jdbcType=VARCHAR},
      </if>
      <if test="brBookid != null">
        #{brBookid,jdbcType=INTEGER},
      </if>
      <if test="brReaderid != null">
        #{brReaderid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.book.springboot.entity.BorrowExample" resultType="java.lang.Long">
    select count(*) from borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update borrow
    <set>
      <if test="record.brId != null">
        br_id = #{record.brId,jdbcType=INTEGER},
      </if>
      <if test="record.brOuttime != null">
        br_outtime = #{record.brOuttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.brEndtime != null">
        br_endtime = #{record.brEndtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.brBacktime != null">
        br_backtime = #{record.brBacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.brIfreturn != null">
        br_ifreturn = #{record.brIfreturn,jdbcType=INTEGER},
      </if>
      <if test="record.brRecord != null">
        br_record = #{record.brRecord,jdbcType=VARCHAR},
      </if>
      <if test="record.brBookid != null">
        br_bookid = #{record.brBookid,jdbcType=INTEGER},
      </if>
      <if test="record.brReaderid != null">
        br_readerid = #{record.brReaderid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update borrow
    set br_id = #{record.brId,jdbcType=INTEGER},
      br_outtime = #{record.brOuttime,jdbcType=TIMESTAMP},
      br_endtime = #{record.brEndtime,jdbcType=TIMESTAMP},
      br_backtime = #{record.brBacktime,jdbcType=TIMESTAMP},
      br_ifreturn = #{record.brIfreturn,jdbcType=INTEGER},
      br_record = #{record.brRecord,jdbcType=VARCHAR},
      br_bookid = #{record.brBookid,jdbcType=INTEGER},
      br_readerid = #{record.brReaderid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.springboot.entity.Borrow">
    update borrow
    <set>
      <if test="brOuttime != null">
        br_outtime = #{brOuttime,jdbcType=TIMESTAMP},
      </if>
      <if test="brEndtime != null">
        br_endtime = #{brEndtime,jdbcType=TIMESTAMP},
      </if>
      <if test="brBacktime != null">
        br_backtime = #{brBacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="brIfreturn != null">
        br_ifreturn = #{brIfreturn,jdbcType=INTEGER},
      </if>
      <if test="brRecord != null">
        br_record = #{brRecord,jdbcType=VARCHAR},
      </if>
      <if test="brBookid != null">
        br_bookid = #{brBookid,jdbcType=INTEGER},
      </if>
      <if test="brReaderid != null">
        br_readerid = #{brReaderid,jdbcType=INTEGER},
      </if>
    </set>
    where br_id = #{brId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.book.springboot.entity.Borrow">
    update borrow
    set br_outtime = #{brOuttime,jdbcType=TIMESTAMP},
      br_endtime = #{brEndtime,jdbcType=TIMESTAMP},
      br_backtime = #{brBacktime,jdbcType=TIMESTAMP},
      br_ifreturn = #{brIfreturn,jdbcType=INTEGER},
      br_record = #{brRecord,jdbcType=VARCHAR},
      br_bookid = #{brBookid,jdbcType=INTEGER},
      br_readerid = #{brReaderid,jdbcType=INTEGER}
    where br_id = #{brId,jdbcType=INTEGER}
  </update>
</mapper>